//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SICOAdmin1._0.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SICOAdminEntities : DbContext
    {
        public SICOAdminEntities()
            : base("name=SICOAdminEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCION> ACCION { get; set; }
        public virtual DbSet<ACCION_PERFIL> ACCION_PERFIL { get; set; }
        public virtual DbSet<AUXILIAR_CXC> AUXILIAR_CXC { get; set; }
        public virtual DbSet<AUXILIAR_CXP> AUXILIAR_CXP { get; set; }
        public virtual DbSet<CLIENTE> CLIENTE { get; set; }
        public virtual DbSet<COLABORADOR> COLABORADOR { get; set; }
        public virtual DbSet<COLABORADOR_ACCION_PERSONAL> COLABORADOR_ACCION_PERSONAL { get; set; }
        public virtual DbSet<CONCEPTO> CONCEPTO { get; set; }
        public virtual DbSet<CONCEPTO_COLABORADOR> CONCEPTO_COLABORADOR { get; set; }
        public virtual DbSet<CONCEPTO_FORMULA> CONCEPTO_FORMULA { get; set; }
        public virtual DbSet<CONSECUTIVO> CONSECUTIVO { get; set; }
        public virtual DbSet<CONTROL_ASISTENCIA> CONTROL_ASISTENCIA { get; set; }
        public virtual DbSet<DOCUMENTO_CXC> DOCUMENTO_CXC { get; set; }
        public virtual DbSet<DOCUMENTO_CXP> DOCUMENTO_CXP { get; set; }
        public virtual DbSet<FILIAL> FILIAL { get; set; }
        public virtual DbSet<FILIAL_PERSONA> FILIAL_PERSONA { get; set; }
        public virtual DbSet<NOMINA> NOMINA { get; set; }
        public virtual DbSet<PARAMETRO> PARAMETRO { get; set; }
        public virtual DbSet<PARENTESCO> PARENTESCO { get; set; }
        public virtual DbSet<PARTIDA> PARTIDA { get; set; }
        public virtual DbSet<PERFIL> PERFIL { get; set; }
        public virtual DbSet<PLANILLA> PLANILLA { get; set; }
        public virtual DbSet<PLANILLA_COLABORADOR> PLANILLA_COLABORADOR { get; set; }
        public virtual DbSet<PLANILLA_DETALLE> PLANILLA_DETALLE { get; set; }
        public virtual DbSet<PROVEEDOR> PROVEEDOR { get; set; }
        public virtual DbSet<PUESTO> PUESTO { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TIPO_ACCION_PERS> TIPO_ACCION_PERS { get; set; }
        public virtual DbSet<USUARIO> USUARIO { get; set; }
        public virtual DbSet<USUARIO_PERFIL> USUARIO_PERFIL { get; set; }
    
        [DbFunction("SICOAdminEntities", "f_opcionesPerfilesUsuario")]
        public virtual IQueryable<f_opcionesPerfilesUsuario_Result> f_opcionesPerfilesUsuario(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_opcionesPerfilesUsuario_Result>("[SICOAdminEntities].[f_opcionesPerfilesUsuario](@usuario)", usuarioParameter);
        }
    
        [DbFunction("SICOAdminEntities", "f_opcionesUsuariosPerfil")]
        public virtual IQueryable<f_opcionesUsuariosPerfil_Result> f_opcionesUsuariosPerfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<f_opcionesUsuariosPerfil_Result>("[SICOAdminEntities].[f_opcionesUsuariosPerfil](@IdPerfil)", idPerfilParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_C_BuscarConsecutivo_Result> SP_C_BuscarConsecutivo(Nullable<int> idConsecutivo)
        {
            var idConsecutivoParameter = idConsecutivo.HasValue ?
                new ObjectParameter("idConsecutivo", idConsecutivo) :
                new ObjectParameter("idConsecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_BuscarConsecutivo_Result>("SP_C_BuscarConsecutivo", idConsecutivoParameter);
        }
    
        public virtual ObjectResult<SP_C_BuscarPerfil_Result> SP_C_BuscarPerfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_BuscarPerfil_Result>("SP_C_BuscarPerfil", idPerfilParameter);
        }
    
        public virtual ObjectResult<SP_C_BuscarUsuario_Result> SP_C_BuscarUsuario(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_BuscarUsuario_Result>("SP_C_BuscarUsuario", usuarioParameter);
        }
    
        public virtual ObjectResult<SP_C_MostrarAcciones_Result> SP_C_MostrarAcciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_MostrarAcciones_Result>("SP_C_MostrarAcciones");
        }
    
        public virtual ObjectResult<SP_C_MostrarConsecutivos_Result> SP_C_MostrarConsecutivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_MostrarConsecutivos_Result>("SP_C_MostrarConsecutivos");
        }
    
        public virtual ObjectResult<SP_C_MostrarPerfil_Result> SP_C_MostrarPerfil()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_MostrarPerfil_Result>("SP_C_MostrarPerfil");
        }
    
        public virtual ObjectResult<SP_C_MostrarUsuarios_Result> SP_C_MostrarUsuarios(string opcion, string usuario)
        {
            var opcionParameter = opcion != null ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_MostrarUsuarios_Result>("SP_C_MostrarUsuarios", opcionParameter, usuarioParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Get_Next_Consecutivo(string psValorConsecutivo, string psMascara, ObjectParameter psNuevoConsecutivo)
        {
            var psValorConsecutivoParameter = psValorConsecutivo != null ?
                new ObjectParameter("psValorConsecutivo", psValorConsecutivo) :
                new ObjectParameter("psValorConsecutivo", typeof(string));
    
            var psMascaraParameter = psMascara != null ?
                new ObjectParameter("psMascara", psMascara) :
                new ObjectParameter("psMascara", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Get_Next_Consecutivo", psValorConsecutivoParameter, psMascaraParameter, psNuevoConsecutivo);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_P_ActualizarConsecutivo(Nullable<int> idConsecutivo, string alias, string mascara, string proximoValor, Nullable<bool> activo, string usuarioModificacion, ObjectParameter resultado, ObjectParameter mensaje)
        {
            var idConsecutivoParameter = idConsecutivo.HasValue ?
                new ObjectParameter("idConsecutivo", idConsecutivo) :
                new ObjectParameter("idConsecutivo", typeof(int));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var mascaraParameter = mascara != null ?
                new ObjectParameter("mascara", mascara) :
                new ObjectParameter("mascara", typeof(string));
    
            var proximoValorParameter = proximoValor != null ?
                new ObjectParameter("proximoValor", proximoValor) :
                new ObjectParameter("proximoValor", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("usuarioModificacion", usuarioModificacion) :
                new ObjectParameter("usuarioModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ActualizarConsecutivo", idConsecutivoParameter, aliasParameter, mascaraParameter, proximoValorParameter, activoParameter, usuarioModificacionParameter, resultado, mensaje);
        }
    
        public virtual int SP_P_ActualizarProximoValorConsecutivo(Nullable<int> idConsecutivo, string valorActual, Nullable<short> accion)
        {
            var idConsecutivoParameter = idConsecutivo.HasValue ?
                new ObjectParameter("idConsecutivo", idConsecutivo) :
                new ObjectParameter("idConsecutivo", typeof(int));
    
            var valorActualParameter = valorActual != null ?
                new ObjectParameter("valorActual", valorActual) :
                new ObjectParameter("valorActual", typeof(string));
    
            var accionParameter = accion.HasValue ?
                new ObjectParameter("accion", accion) :
                new ObjectParameter("accion", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ActualizarProximoValorConsecutivo", idConsecutivoParameter, valorActualParameter, accionParameter);
        }
    
        public virtual int SP_P_AddUser(string usuario, string nombre, string tipo, Nullable<bool> activo, Nullable<bool> bloqueado, string contrasena, string correoElectronico, Nullable<int> diasCambioContrasena, Nullable<byte> intentosFallidos, string usuarioCreacion, string usuarioModificacion, ObjectParameter resultado, ObjectParameter mensaje)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var bloqueadoParameter = bloqueado.HasValue ?
                new ObjectParameter("Bloqueado", bloqueado) :
                new ObjectParameter("Bloqueado", typeof(bool));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var diasCambioContrasenaParameter = diasCambioContrasena.HasValue ?
                new ObjectParameter("DiasCambioContrasena", diasCambioContrasena) :
                new ObjectParameter("DiasCambioContrasena", typeof(int));
    
            var intentosFallidosParameter = intentosFallidos.HasValue ?
                new ObjectParameter("IntentosFallidos", intentosFallidos) :
                new ObjectParameter("IntentosFallidos", typeof(byte));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_AddUser", usuarioParameter, nombreParameter, tipoParameter, activoParameter, bloqueadoParameter, contrasenaParameter, correoElectronicoParameter, diasCambioContrasenaParameter, intentosFallidosParameter, usuarioCreacionParameter, usuarioModificacionParameter, resultado, mensaje);
        }
    
        public virtual int SP_P_BloquearUsuario(string usuario, ObjectParameter mensaje)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_BloquearUsuario", usuarioParameter, mensaje);
        }
    
        public virtual int SP_P_CambioContrasena(string usuario, string contrasenaActual, string contrasenaNueva, ObjectParameter resultado, ObjectParameter mensaje)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contrasenaActualParameter = contrasenaActual != null ?
                new ObjectParameter("ContrasenaActual", contrasenaActual) :
                new ObjectParameter("ContrasenaActual", typeof(string));
    
            var contrasenaNuevaParameter = contrasenaNueva != null ?
                new ObjectParameter("ContrasenaNueva", contrasenaNueva) :
                new ObjectParameter("ContrasenaNueva", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CambioContrasena", usuarioParameter, contrasenaActualParameter, contrasenaNuevaParameter, resultado, mensaje);
        }
    
        public virtual int SP_P_CrearAccion(string alias, string descipcion, string tipo, string usuarioCreacionModificacion)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var descipcionParameter = descipcion != null ?
                new ObjectParameter("descipcion", descipcion) :
                new ObjectParameter("descipcion", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var usuarioCreacionModificacionParameter = usuarioCreacionModificacion != null ?
                new ObjectParameter("usuarioCreacionModificacion", usuarioCreacionModificacion) :
                new ObjectParameter("usuarioCreacionModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CrearAccion", aliasParameter, descipcionParameter, tipoParameter, usuarioCreacionModificacionParameter);
        }
    
        public virtual int SP_P_CrearConsecutivo(string alias, string mascara, string proximoValor, Nullable<bool> activo, string usuarioCreacion, ObjectParameter resultado, ObjectParameter mensage)
        {
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var mascaraParameter = mascara != null ?
                new ObjectParameter("mascara", mascara) :
                new ObjectParameter("mascara", typeof(string));
    
            var proximoValorParameter = proximoValor != null ?
                new ObjectParameter("proximoValor", proximoValor) :
                new ObjectParameter("proximoValor", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("activo", activo) :
                new ObjectParameter("activo", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("usuarioCreacion", usuarioCreacion) :
                new ObjectParameter("usuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CrearConsecutivo", aliasParameter, mascaraParameter, proximoValorParameter, activoParameter, usuarioCreacionParameter, resultado, mensage);
        }
    
        public virtual int SP_P_CrearPerfil(string nombre, string descripcion, Nullable<bool> activo, string usuarioCreacion, string usuarioModificacion)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CrearPerfil", nombreParameter, descripcionParameter, activoParameter, usuarioCreacionParameter, usuarioModificacionParameter);
        }
    
        public virtual int SP_P_CrearUsuarioPerfil(string usuario, Nullable<int> idPerfil, string usuarioCreacion)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CrearUsuarioPerfil", usuarioParameter, idPerfilParameter, usuarioCreacionParameter);
        }
    
        public virtual ObjectResult<SP_P_DibujarArbol_Result> SP_P_DibujarArbol(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_P_DibujarArbol_Result>("SP_P_DibujarArbol", idPerfilParameter);
        }
    
        public virtual int SP_P_EliminarAccion(Nullable<int> idAccion)
        {
            var idAccionParameter = idAccion.HasValue ?
                new ObjectParameter("idAccion", idAccion) :
                new ObjectParameter("idAccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_EliminarAccion", idAccionParameter);
        }
    
        public virtual int SP_P_EliminarAll_AccionPerfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_EliminarAll_AccionPerfil", idPerfilParameter);
        }
    
        public virtual int SP_P_EliminarUsuarioPerfil(string usuario, Nullable<int> idPerfil)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_EliminarUsuarioPerfil", usuarioParameter, idPerfilParameter);
        }
    
        public virtual int SP_P_GuardarCheck(Nullable<int> idAccion, Nullable<int> idPerfil, string usuCreacion)
        {
            var idAccionParameter = idAccion.HasValue ?
                new ObjectParameter("idAccion", idAccion) :
                new ObjectParameter("idAccion", typeof(int));
    
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("idPerfil", idPerfil) :
                new ObjectParameter("idPerfil", typeof(int));
    
            var usuCreacionParameter = usuCreacion != null ?
                new ObjectParameter("usuCreacion", usuCreacion) :
                new ObjectParameter("usuCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_GuardarCheck", idAccionParameter, idPerfilParameter, usuCreacionParameter);
        }
    
        public virtual int SP_P_Logeo(string usuario, string contrasena, ObjectParameter resultado, ObjectParameter mensaje)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_Logeo", usuarioParameter, contrasenaParameter, resultado, mensaje);
        }
    
        public virtual int SP_P_ModificarAccion(Nullable<int> idAccion, string alias, string descripcion, string tipo, string usuarioModificacion)
        {
            var idAccionParameter = idAccion.HasValue ?
                new ObjectParameter("idAccion", idAccion) :
                new ObjectParameter("idAccion", typeof(int));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("alias", alias) :
                new ObjectParameter("alias", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(string));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("usuarioModificacion", usuarioModificacion) :
                new ObjectParameter("usuarioModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ModificarAccion", idAccionParameter, aliasParameter, descripcionParameter, tipoParameter, usuarioModificacionParameter);
        }
    
        public virtual int SP_P_ModificarEstadoConsecutivo(Nullable<int> idConsecutivo, ObjectParameter resultado)
        {
            var idConsecutivoParameter = idConsecutivo.HasValue ?
                new ObjectParameter("idConsecutivo", idConsecutivo) :
                new ObjectParameter("idConsecutivo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ModificarEstadoConsecutivo", idConsecutivoParameter, resultado);
        }
    
        public virtual int SP_P_ModificarEstadoPerfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ModificarEstadoPerfil", idPerfilParameter);
        }
    
        public virtual int SP_P_ModificarPerfil(Nullable<int> idPerfil, string nombre, string descripcion, Nullable<bool> activo, string usuarioModificacion)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ModificarPerfil", idPerfilParameter, nombreParameter, descripcionParameter, activoParameter, usuarioModificacionParameter);
        }
    
        public virtual int SP_P_ModificarUsuario(string usuario, string nombre, string tipo, Nullable<bool> activo, Nullable<bool> bloqueado, string contrasena, string correoElectronico, Nullable<int> diasCambioContrasena, Nullable<byte> iNTentosFallidos, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion, ObjectParameter resultado, ObjectParameter mensaje)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var bloqueadoParameter = bloqueado.HasValue ?
                new ObjectParameter("Bloqueado", bloqueado) :
                new ObjectParameter("Bloqueado", typeof(bool));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var diasCambioContrasenaParameter = diasCambioContrasena.HasValue ?
                new ObjectParameter("DiasCambioContrasena", diasCambioContrasena) :
                new ObjectParameter("DiasCambioContrasena", typeof(int));
    
            var iNTentosFallidosParameter = iNTentosFallidos.HasValue ?
                new ObjectParameter("INTentosFallidos", iNTentosFallidos) :
                new ObjectParameter("INTentosFallidos", typeof(byte));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("UsuarioModificacion", usuarioModificacion) :
                new ObjectParameter("UsuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("FechaModificacion", fechaModificacion) :
                new ObjectParameter("FechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ModificarUsuario", usuarioParameter, nombreParameter, tipoParameter, activoParameter, bloqueadoParameter, contrasenaParameter, correoElectronicoParameter, diasCambioContrasenaParameter, iNTentosFallidosParameter, usuarioModificacionParameter, fechaModificacionParameter, resultado, mensaje);
        }
    
        public virtual ObjectResult<SP_P_PerfilesDelUsuario_Result> SP_P_PerfilesDelUsuario(string usuario, Nullable<int> nPag, Nullable<int> cantReg, string palabraBusc, ObjectParameter totalPag)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var nPagParameter = nPag.HasValue ?
                new ObjectParameter("NPag", nPag) :
                new ObjectParameter("NPag", typeof(int));
    
            var cantRegParameter = cantReg.HasValue ?
                new ObjectParameter("CantReg", cantReg) :
                new ObjectParameter("CantReg", typeof(int));
    
            var palabraBuscParameter = palabraBusc != null ?
                new ObjectParameter("palabraBusc", palabraBusc) :
                new ObjectParameter("palabraBusc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_P_PerfilesDelUsuario_Result>("SP_P_PerfilesDelUsuario", usuarioParameter, nPagParameter, cantRegParameter, palabraBuscParameter, totalPag);
        }
    
        public virtual ObjectResult<SP_P_UsuariosDelPerfil_Result> SP_P_UsuariosDelPerfil(Nullable<int> idPerfil)
        {
            var idPerfilParameter = idPerfil.HasValue ?
                new ObjectParameter("IdPerfil", idPerfil) :
                new ObjectParameter("IdPerfil", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_P_UsuariosDelPerfil_Result>("SP_P_UsuariosDelPerfil", idPerfilParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<int>> SP_C_AuthorizeUser(string usuario)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_C_AuthorizeUser", usuarioParameter);
        }
    
        public virtual ObjectResult<SP_C_BuscarNomina_Result> SP_C_BuscarNomina(Nullable<int> idNomina)
        {
            var idNominaParameter = idNomina.HasValue ?
                new ObjectParameter("idNomina", idNomina) :
                new ObjectParameter("idNomina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_BuscarNomina_Result>("SP_C_BuscarNomina", idNominaParameter);
        }
    
        public virtual ObjectResult<SP_C_ConsecutivosActivos_Result> SP_C_ConsecutivosActivos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_ConsecutivosActivos_Result>("SP_C_ConsecutivosActivos");
        }
    
        public virtual ObjectResult<SP_C_MostarNominas_Result> SP_C_MostarNominas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_C_MostarNominas_Result>("SP_C_MostarNominas");
        }
    
        public virtual int SP_P_ActualizarNomina(Nullable<int> idNomina, string descripcion, string frecuencia, Nullable<int> idConsecutivo, string usuarioModificacion, Nullable<System.DateTime> fechaModificacion)
        {
            var idNominaParameter = idNomina.HasValue ?
                new ObjectParameter("idNomina", idNomina) :
                new ObjectParameter("idNomina", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("frecuencia", frecuencia) :
                new ObjectParameter("frecuencia", typeof(string));
    
            var idConsecutivoParameter = idConsecutivo.HasValue ?
                new ObjectParameter("idConsecutivo", idConsecutivo) :
                new ObjectParameter("idConsecutivo", typeof(int));
    
            var usuarioModificacionParameter = usuarioModificacion != null ?
                new ObjectParameter("usuarioModificacion", usuarioModificacion) :
                new ObjectParameter("usuarioModificacion", typeof(string));
    
            var fechaModificacionParameter = fechaModificacion.HasValue ?
                new ObjectParameter("fechaModificacion", fechaModificacion) :
                new ObjectParameter("fechaModificacion", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_ActualizarNomina", idNominaParameter, descripcionParameter, frecuenciaParameter, idConsecutivoParameter, usuarioModificacionParameter, fechaModificacionParameter);
        }
    
        public virtual int SP_P_CrearNomina(string descripcion, string frecuencia, Nullable<int> idConsecutivo, string usuarioCreacion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var frecuenciaParameter = frecuencia != null ?
                new ObjectParameter("frecuencia", frecuencia) :
                new ObjectParameter("frecuencia", typeof(string));
    
            var idConsecutivoParameter = idConsecutivo.HasValue ?
                new ObjectParameter("idConsecutivo", idConsecutivo) :
                new ObjectParameter("idConsecutivo", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("usuarioCreacion", usuarioCreacion) :
                new ObjectParameter("usuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CrearNomina", descripcionParameter, frecuenciaParameter, idConsecutivoParameter, usuarioCreacionParameter);
        }
    
        public virtual int SP_P_CrearParentesco(Nullable<int> idAccion, Nullable<int> padre, string usuarioCreacionModf)
        {
            var idAccionParameter = idAccion.HasValue ?
                new ObjectParameter("idAccion", idAccion) :
                new ObjectParameter("idAccion", typeof(int));
    
            var padreParameter = padre.HasValue ?
                new ObjectParameter("padre", padre) :
                new ObjectParameter("padre", typeof(int));
    
            var usuarioCreacionModfParameter = usuarioCreacionModf != null ?
                new ObjectParameter("usuarioCreacionModf", usuarioCreacionModf) :
                new ObjectParameter("usuarioCreacionModf", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_CrearParentesco", idAccionParameter, padreParameter, usuarioCreacionModfParameter);
        }
    
        public virtual int SP_P_EliminarNomina(Nullable<int> idNomina)
        {
            var idNominaParameter = idNomina.HasValue ?
                new ObjectParameter("idNomina", idNomina) :
                new ObjectParameter("idNomina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_P_EliminarNomina", idNominaParameter);
        }
    }
}
